#pragma hdrstop
#pragma argsused

#ifdef _WIN32
#include <tchar.h>
#else
  typedef char _TCHAR;
  #define _tmain main
#endif

#include "SNClientTCP.h"
#include "SNServeurTcpMonoClient.h"
#include <stdio.h>
#include <iostream>
#include <cstring>

#include <windows.h>

using namespace std;

int _tmain(int argc, _TCHAR* argv[])
{
	SNClientTCP 			 myClient;
	SNServeurTcpMonoClient   myServeur;
	int                      mode;
	char                     choix;
	string                   IPServeur;
	char                     message[1500];

	cout << "Choisir le mode :" << endl;
	cout << "1 : serveur" << endl;
	cout << "2 : client" << endl;
	cin  >> mode;

	if(mode == 1)        // serveur
	{
		myServeur.Initialisation();
		myServeur.MettreEnEcouteSurLePort(1066);

		cout << "En ecoute..." << endl;

		myServeur.AttendreUnNouveauClient();
		myServeur.RecevoirUnMessage(message, 1500);

		cout << "Message : ";
		cout << message << endl;

		myServeur.EnvoyerUnMessage("ok",2);

		cout << "Voulez-vous arrêter le serveur ?" << endl;
		cout << "o : oui" << endl;
		cout << "n : non (attente d'un nouveau message)" << endl;
		cin >> choix;

		if(choix == 'o')     // arrêter le serveur
		{
			myServeur.FermerLaCommunicationAvecLeClient();
			myServeur.ArreterLeServeur();
		}
		if(choix == 'n')     // laisser serveur actif
		{
       		myServeur.Initialisation();
			myServeur.MettreEnEcouteSurLePort(1066);
			myServeur.AttendreUnNouveauClient();
			myServeur.RecevoirUnMessage(message, 1500);

			myServeur.EnvoyerUnMessage("ok",2);
		}
	}

	if(mode == 2)        // client
	{
		cout << "Saisissez l'IP du serveur" << endl;
		cin >> IPServeur;

		if(myClient.SeConnecterAUnServeur(IPServeur, 1066) == false)
		{
			Sleep(10000);
			return 0;
		}
		else
		{
			cout << "Saisissez le message" << endl;
			cin  >> message;

			myClient.Envoyer(message, strlen(message));
			myClient.Recevoir(message, 1500);
			cout << "Message envoye : " << message << endl;
		}
	}

	cin.get();
   	cin.get();
	return 0;
}
